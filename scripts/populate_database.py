#!/usr/bin/env python3
"""
Script para poblar la base de datos con datos de ejemplo
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from backend.app import create_app
from backend.models import db, User, Category, Question, Conversation, Message, ChatbotStats
from backend.database.database_service import DatabaseService
from datetime import datetime, timedelta
import random

def create_sample_data():
    """Crear datos de ejemplo en la base de datos"""
    app = create_app()
    
    with app.app_context():
        # Crear tablas si no existen
        db.create_all()
        
        print("üóÑÔ∏è  Poblando base de datos con datos de ejemplo...")
        
        # 1. Crear usuarios de ejemplo
        print("üë• Creando usuarios...")
        users = []
        
        # Usuario admin
        admin = User()
        admin.username = 'admin'
        admin.email = 'admin@chatbot.com'
        admin.is_admin = True
        admin.set_password('admin123')
        users.append(admin)
        
        # Usuarios normales
        normal_users = [
            {'username': 'maria', 'email': 'maria@example.com'},
            {'username': 'juan', 'email': 'juan@example.com'},
            {'username': 'ana', 'email': 'ana@example.com'},
            {'username': 'carlos', 'email': 'carlos@example.com'}
        ]
        
        for user_data in normal_users:
            user = User()
            user.username = user_data['username']
            user.email = user_data['email']
            user.is_admin = False
            user.set_password('password123')
            users.append(user)
        
        db.session.add_all(users)
        db.session.commit()
        print(f"‚úÖ {len(users)} usuarios creados")
        
        # 2. Crear categor√≠as
        print("üìÇ Creando categor√≠as...")
        categories_data = [
            {
                'name': 'Matem√°ticas',
                'description': 'Preguntas sobre matem√°ticas, √°lgebra, geometr√≠a, etc.',
                'icon': 'fas fa-calculator',
                'color': '#3B82F6'
            },
            {
                'name': 'Historia',
                'description': 'Preguntas sobre historia mundial, eventos hist√≥ricos, etc.',
                'icon': 'fas fa-landmark',
                'color': '#EF4444'
            },
            {
                'name': 'Ciencia',
                'description': 'Preguntas sobre f√≠sica, qu√≠mica, biolog√≠a, etc.',
                'icon': 'fas fa-flask',
                'color': '#10B981'
            },
            {
                'name': 'Literatura',
                'description': 'Preguntas sobre libros, autores, g√©neros literarios, etc.',
                'icon': 'fas fa-book',
                'color': '#8B5CF6'
            },
            {
                'name': 'Tecnolog√≠a',
                'description': 'Preguntas sobre programaci√≥n, computadoras, internet, etc.',
                'icon': 'fas fa-laptop-code',
                'color': '#F59E0B'
            }
        ]
        
        categories = []
        for cat_data in categories_data:
            category = Category(**cat_data)
            categories.append(category)
        
        db.session.add_all(categories)
        db.session.commit()
        print(f"‚úÖ {len(categories)} categor√≠as creadas")
        
        # 3. Crear preguntas y respuestas
        print("‚ùì Creando preguntas y respuestas...")
        questions_data = [
            # Matem√°ticas
            {
                'question': '¬øCu√°l es la f√≥rmula del √°rea de un c√≠rculo?',
                'answer': 'La f√≥rmula del √°rea de un c√≠rculo es A = œÄr¬≤, donde r es el radio del c√≠rculo.',
                'category': 'Matem√°ticas',
                'keywords': '√°rea, c√≠rculo, f√≥rmula, radio, pi',
                'difficulty': 1
            },
            {
                'question': '¬øQu√© es el teorema de Pit√°goras?',
                'answer': 'El teorema de Pit√°goras establece que en un tri√°ngulo rect√°ngulo, el cuadrado de la hipotenusa es igual a la suma de los cuadrados de los catetos: a¬≤ + b¬≤ = c¬≤.',
                'category': 'Matem√°ticas',
                'keywords': 'teorema, pit√°goras, tri√°ngulo, rect√°ngulo, hipotenusa',
                'difficulty': 2
            },
            {
                'question': '¬øC√≥mo se resuelve una ecuaci√≥n cuadr√°tica?',
                'answer': 'Una ecuaci√≥n cuadr√°tica se resuelve usando la f√≥rmula cuadr√°tica: x = (-b ¬± ‚àö(b¬≤ - 4ac)) / 2a, donde ax¬≤ + bx + c = 0.',
                'category': 'Matem√°ticas',
                'keywords': 'ecuaci√≥n, cuadr√°tica, f√≥rmula, resolver',
                'difficulty': 3
            },
            
            # Historia
            {
                'question': '¬øCu√°ndo comenz√≥ la Segunda Guerra Mundial?',
                'answer': 'La Segunda Guerra Mundial comenz√≥ el 1 de septiembre de 1939 cuando Alemania invadi√≥ Polonia.',
                'category': 'Historia',
                'keywords': 'segunda guerra mundial, alemania, polonia, 1939',
                'difficulty': 1
            },
            {
                'question': '¬øQui√©n fue Napole√≥n Bonaparte?',
                'answer': 'Napole√≥n Bonaparte fue un l√≠der pol√≠tico y militar franc√©s que se convirti√≥ en emperador de Francia y conquist√≥ gran parte de Europa a principios del siglo XIX.',
                'category': 'Historia',
                'keywords': 'napole√≥n, bonaparte, francia, emperador, conquista',
                'difficulty': 2
            },
            
            # Ciencia
            {
                'question': '¬øQu√© es la fotos√≠ntesis?',
                'answer': 'La fotos√≠ntesis es el proceso mediante el cual las plantas convierten la luz solar, di√≥xido de carbono y agua en glucosa y ox√≠geno.',
                'category': 'Ciencia',
                'keywords': 'fotos√≠ntesis, plantas, luz solar, glucosa, ox√≠geno',
                'difficulty': 1
            },
            {
                'question': '¬øCu√°l es la estructura del ADN?',
                'answer': 'El ADN tiene una estructura de doble h√©lice, formada por dos cadenas de nucle√≥tidos que se enrollan entre s√≠, con bases nitrogenadas que se aparean espec√≠ficamente.',
                'category': 'Ciencia',
                'keywords': 'ADN, doble h√©lice, nucle√≥tidos, bases nitrogenadas',
                'difficulty': 3
            },
            
            # Literatura
            {
                'question': '¬øQui√©n escribi√≥ "Don Quijote"?',
                'answer': '"Don Quijote" fue escrito por Miguel de Cervantes Saavedra y se public√≥ en dos partes en 1605 y 1615.',
                'category': 'Literatura',
                'keywords': 'don quijote, cervantes, novela, literatura espa√±ola',
                'difficulty': 1
            },
            {
                'question': '¬øQu√© es la poes√≠a √©pica?',
                'answer': 'La poes√≠a √©pica es un g√©nero literario que narra las haza√±as de h√©roes legendarios o hist√≥ricos, generalmente en verso y con un tono elevado.',
                'category': 'Literatura',
                'keywords': 'poes√≠a, √©pica, h√©roes, verso, narrativa',
                'difficulty': 2
            },
            
            # Tecnolog√≠a
            {
                'question': '¬øQu√© es HTML?',
                'answer': 'HTML (HyperText Markup Language) es el lenguaje de marcado est√°ndar para crear p√°ginas web. Define la estructura y el contenido de una p√°gina.',
                'category': 'Tecnolog√≠a',
                'keywords': 'HTML, lenguaje, marcado, web, p√°ginas',
                'difficulty': 1
            },
            {
                'question': '¬øQu√© es un algoritmo?',
                'answer': 'Un algoritmo es un conjunto de instrucciones paso a paso dise√±adas para realizar una tarea espec√≠fica o resolver un problema.',
                'category': 'Tecnolog√≠a',
                'keywords': 'algoritmo, instrucciones, tarea, problema, programaci√≥n',
                'difficulty': 2
            },
            {
                'question': '¬øQu√© es la inteligencia artificial?',
                'answer': 'La inteligencia artificial es la simulaci√≥n de procesos de inteligencia humana por parte de m√°quinas, especialmente sistemas inform√°ticos.',
                'category': 'Tecnolog√≠a',
                'keywords': 'inteligencia artificial, IA, m√°quinas, simulaci√≥n, procesos',
                'difficulty': 2
            }
        ]
        
        questions = []
        for q_data in questions_data:
            category = Category.query.filter_by(name=q_data['category']).first()
            question = Question(
                question_text=q_data['question'],
                answer_text=q_data['answer'],
                category_id=category.id if category else None,
                keywords=q_data['keywords'],
                difficulty_level=q_data['difficulty'],
                usage_count=random.randint(0, 50),
                accuracy_score=random.uniform(0.6, 1.0),
                is_active=True,
                created_by=admin.id
            )
            questions.append(question)
        
        db.session.add_all(questions)
        db.session.commit()
        print(f"‚úÖ {len(questions)} preguntas creadas")
        
        # 4. Crear conversaciones y mensajes de ejemplo
        print("üí¨ Creando conversaciones de ejemplo...")
        
        # Generar conversaciones para los √∫ltimos 7 d√≠as
        for i in range(20):
            # Usuario aleatorio
            user = random.choice(users)
            
            # Fecha aleatoria en los √∫ltimos 7 d√≠as
            days_ago = random.randint(0, 7)
            start_time = datetime.utcnow() - timedelta(days=days_ago, hours=random.randint(0, 23))
            
            # Crear conversaci√≥n
            conversation = Conversation(
                user_id=user.id if not user.is_admin else None,
                session_id=f"session_{i}_{int(start_time.timestamp())}",
                started_at=start_time,
                ended_at=start_time + timedelta(minutes=random.randint(5, 30)),
                total_messages=random.randint(3, 15),
                language='es'
            )
            db.session.add(conversation)
            db.session.flush()  # Para obtener el ID
            
            # Crear mensajes para esta conversaci√≥n
            num_messages = conversation.total_messages
            for j in range(num_messages):
                message_time = start_time + timedelta(minutes=j * 2)
                
                # Seleccionar pregunta aleatoria
                question = random.choice(questions)
                
                # Generar input de usuario
                user_inputs = [
                    question.question_text,
                    question.question_text.split('?')[0] + '?',
                    question.question_text.lower(),
                    question.question_text.replace('¬ø', '').replace('?', '')
                ]
                user_input = random.choice(user_inputs)
                
                message = Message(
                    conversation_id=conversation.id,
                    question_id=question.id,
                    user_input=user_input,
                    bot_response=question.answer_text,
                    intent_detected='question',
                    confidence_score=random.uniform(0.7, 1.0),
                    response_time=random.uniform(0.1, 2.0),
                    keywords_extracted=question.keywords,
                    user_rating=random.randint(1, 5) if random.random() > 0.3 else None,
                    timestamp=message_time
                )
                db.session.add(message)
                
                # Incrementar uso de la pregunta
                question.usage_count += 1
        
        db.session.commit()
        print("‚úÖ Conversaciones y mensajes creados")
        
        # 5. Crear estad√≠sticas diarias
        print("üìä Creando estad√≠sticas diarias...")
        for i in range(7):
            date = datetime.utcnow().date() - timedelta(days=i)
            
            # Calcular estad√≠sticas para este d√≠a
            day_start = datetime.combine(date, datetime.min.time())
            day_end = datetime.combine(date, datetime.max.time())
            
            conversations_count = Conversation.query.filter(
                Conversation.started_at >= day_start,
                Conversation.started_at <= day_end
            ).count()
            
            messages_count = Message.query.filter(
                Message.timestamp >= day_start,
                Message.timestamp <= day_end
            ).count()
            
            unique_users = db.session.query(Conversation.session_id).filter(
                Conversation.started_at >= day_start,
                Conversation.started_at <= day_end
            ).distinct().count()
            
            # Crear estad√≠sticas
            stats = ChatbotStats(
                date=date,
                total_conversations=conversations_count,
                total_messages=messages_count,
                unique_users=unique_users,
                avg_response_time=random.uniform(0.5, 1.5),
                avg_confidence_score=random.uniform(0.7, 0.95),
                avg_user_rating=random.uniform(3.5, 4.8)
            )
            db.session.add(stats)
        
        db.session.commit()
        print("‚úÖ Estad√≠sticas diarias creadas")
        
        print("\nüéâ ¬°Base de datos poblada exitosamente!")
        print("\nüìã Resumen:")
        print(f"   ‚Ä¢ {len(users)} usuarios")
        print(f"   ‚Ä¢ {len(categories)} categor√≠as")
        print(f"   ‚Ä¢ {len(questions)} preguntas")
        print(f"   ‚Ä¢ 20 conversaciones de ejemplo")
        print(f"   ‚Ä¢ Estad√≠sticas de 7 d√≠as")
        print("\nüîë Credenciales de administrador:")
        print("   Usuario: admin")
        print("   Contrase√±a: admin123")

if __name__ == '__main__':
    create_sample_data() 